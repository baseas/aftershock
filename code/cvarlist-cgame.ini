[cg_ignore]
def:	0
range:	bool
flags:	none
vm:		cgame
doc:	

[cg_autoswitch]
def:	0
range:	bool
flags:	archive
vm:		cgame
doc:	Whether to switch to the weapon when it is picked up.

[cg_drawGun]
def:	1
range:	int 0 3
flags:	archive
vm:		cgame
doc:	The position of the gun model.

[cg_zoomFov]
def:	45
range:	float 1 160
flags:	archive
vm:		cgame
doc:	Field of view when zooming.

[cg_fov]
def:	100
range:	float 1 160
flags:	archive
vm:		cgame
doc:	Field of view.

[cg_viewsize]
def:	100
range:	int 30 100
flags:	none
vm:		cgame
doc:	

[cg_shadows]
def:	1
range:	int 0 4
flags:	archive
vm:		cgame
doc:	

[cg_gibs]
def:	1
range:	bool
flags:	archive
vm:		cgame
doc:	

[cg_drawHud]
def:	1
range:	bool
flags:	archive
vm:		cgame
doc:	Whether to draw the head-up display.

[cg_drawScoreboard]
def:	1
range:	bool
flags:	archive
vm:		cgame
doc:	Whether to draw the scoreboard on death and intermission.

[cg_drawSnapshot]
def:	0
range:	bool
flags:	archive
vm:		cgame
doc:	

[cg_drawAmmoWarning]
def:	1
range:	bool
flags:	archive
vm:		cgame
doc:	Whether to draw a warning on low ammunition.

[cg_drawAttacker]
def:	1
range:	bool
flags:	archive
vm:		cgame
doc:	Whether to draw the attacker name and icon (that means the last damage inflictor).

[cg_drawCrosshair]
def:	4
range:	int 0 inf
flags:	archive
vm:		cgame
doc:	Specifies the crosshair.

[cg_drawCrosshairNames]
def:	1
range:	bool
flags:	archive
vm:		cgame
doc:	

[cg_drawRewards]
def:	1
range:	bool
flags:	archive
vm:		cgame
doc:	

[cg_crosshairSize]
def:	24
range:	int 0 inf
flags:	archive
vm:		cgame
doc:	Specifies the crosshair size.

[cg_crosshairColor]
def:	7
range:	color
flags:	archive
vm:		cgame
doc:	Color of the crosshair.

[cg_crosshairHealth]
def:	1
range:	bool
flags:	archive
vm:		cgame
doc:	Whether to set the crosshair color according to the health.

[cg_crosshairHitColor]
def:	red
range:	all
flags:	archive
vm:		cgame
doc:	Crosshair color when the enemy has been hit.

[cg_crosshairHitColorTime]
def:	200
range:	int 0 inf
flags:	archive
vm:		cgame
doc:	Time in milliseconds the crosshair hit color is used.

[cg_crosshairHitColorStyle]
def:	0
range:	int 0 2
flags:	archive
vm:		cgame
doc:	0: Do not change the crosshair color.
		1: Use cg_crosshairHitColor.
		2: Use cg_crosshairHitColor to colorize by damage done.

[cg_crosshairHitPulse]
def:	1
range:	bool
flags:	archive
vm:		cgame
doc:	

[cg_crosshairPickupPulse]
def:	1
range:	bool
flags:	archive
vm:		cgame
doc:	

[cg_crosshairX]
def:	0
range:	int -inf inf
flags:	archive
vm:		cgame
doc:	X offset of the crosshair.

[cg_crosshairY]
def:	0
range:	int -inf inf
flags:	archive
vm:		cgame
doc:	Y offset of the crosshair.

[cg_simpleItems]
def:	0
range:	bool
flags:	archive
vm:		cgame
doc:	

[cg_marks]
def:	1
range:	bool
flags:	archive
vm:		cgame
doc:	Whether weapons cause marks on the walls.

[cg_lagometer]
def:	1
range:	bool
flags:	archive
vm:		cgame
doc:	

[cg_gunX]
def:	0
range:	int -inf inf
flags:	archive
vm:		cgame
doc:	X offset of the gun model.

[cg_gunY]
def:	0
range:	int -inf inf
flags:	archive
vm:		cgame
doc:	Y offset of the gun model.

[cg_gunZ]
def:	0
range:	int -inf inf
flags:	archive
vm:		cgame
doc:	Z offset of the gun model.

[cg_centertime]
def:	3
range:	float 0 inf
flags:	archive
vm:		cgame
doc:	

[cg_swingSpeed]
def:	0.3
range:	float 0 inf
flags:	cheat
vm:		cgame
doc:	

[cg_animSpeed]
def:	1
range:	bool
flags:	cheat
vm:		cgame
doc:	

[cg_debugAnim]
def:	0
range:	bool
flags:	cheat
vm:		cgame
doc:	

[cg_debugPosition]
def:	0
range:	bool
flags:	cheat
vm:		cgame
doc:	

[cg_debugEvents]
def:	0
range:	bool
flags:	cheat
vm:		cgame
doc:	

[cg_errorDecay]
def:	100
range:	float -inf inf
flags:	none
vm:		cgame
doc:	

[cg_nopredict]
def:	0
range:	bool
flags:	none
vm:		cgame
doc:	

[cg_noPlayerAnims]
def:	0
range:	bool
flags:	cheat
vm:		cgame
doc:	Whether to disable player model animations.

[cg_showmiss]
def:	0
range:	bool
flags:	none
vm:		cgame
doc:	

[cg_footsteps]
def:	1
range:	bool
flags:	cheat
vm:		cgame
doc:	Whether to play footstep sounds.

[cg_tracerChance]
def:	0.4
range:	float -inf inf
flags:	cheat
vm:		cgame
doc:	

[cg_tracerWidth]
def:	1
range:	float 0 inf
flags:	cheat
vm:		cgame
doc:	

[cg_tracerLength]
def:	100
range:	float 0 inf
flags:	cheat
vm:		cgame
doc:	

[cg_thirdPersonRange]
def:	40
range:	float -inf inf
flags:	none
vm:		cgame
doc:	

[cg_thirdPersonAngle]
def:	0
range:	float -inf inf
flags:	none
vm:		cgame
doc:	

[cg_thirdPerson]
def:	0
range:	bool
flags:	cheat
vm:		cgame
doc:	

[cg_chatTime]
def:	3000
range:	int 0 inf
flags:	archive
vm:		cgame
doc:	

[cg_teamChatTime]
def:	3000
range:	int 0 inf
flags:	archive
vm:		cgame
doc:	

[cg_deathNoticeTime]
def:	3000
range:	int 0 inf
flags:	archive
vm:		cgame
doc:	

[cg_predictItems]
def:	1
range:	bool
flags:	archive
vm:		cgame
doc:	

[cg_drawTeamOverlay]
def:	0
range:	bool
flags:	archive
vm:		cgame
doc:	

[cg_teamOverlayUserinfo]
def:	0
range:	bool
flags:	rom userinfo
vm:		cgame
doc:	

[cg_stats]
def:	0
range:	bool
flags:	none
vm:		cgame
doc:	

[cg_drawFriend]
def:	1
range:	bool
flags:	archive
vm:		cgame
doc:	

[cg_teamChatsOnly]
def:	0
range:	bool
flags:	archive
vm:		cgame
doc:	

[cg_blood]
def:	0
range:	bool
flags:	none
vm:		cgame
doc:	archive

[cg_cameraOrbit]
def:	0
range:	float -inf inf
flags:	cheat
vm:		cgame
doc:	

[cg_cameraOrbitDelay]
def:	50
range:	float -inf inf
flags:	archive
vm:		cgame
doc:	

[cg_timescaleFadeEnd]
def:	1
range:	float -inf inf
flags:	none
vm:		cgame
doc:	

[cg_timescaleFadeSpeed]
def:	0
range:	float -inf inf
flags:	none
vm:		cgame
doc:	

[cg_scorePlums]
def:	1
range:	bool
flags:	archive userinfo
vm:		cgame
doc:	

[cg_smoothClients]
def:	0
range:	bool
flags:	userinfo archive
vm:		cgame
doc:	

[cg_noTaunt]
def:	0
range:	bool
flags:	archive
vm:		cgame
doc:	

#
# Zoom
#

[cg_zoomToggle]
def:	0
range:	bool
flags:	archive
vm:		cgame
doc:	

[cg_zoomOutOnDeath]
def:	1
range:	bool
flags:	archive
vm:		cgame
doc:	Whether to zoom out on death. Useful when you have cg_zoomToggle 1.

[cg_zoomScaling]
def:	0
range:	float 0 inf
flags:	archive
vm:		cgame
doc:	Whether to change the field of view smoothly.

[cg_zoomSensitivity]
def:	1
range:	float 0 inf
flags:	archive
vm:		cgame
doc:	When zooming, multiplies the sensitivity by the given value. When set to 0,
		the sensitivity is not adjusted to the field of view.

#
# Models
#

[cg_teamModel]
def:	major/pm
range:	all
flags:	archive
vm:		cgame
doc:	

[cg_teamSoundModel]
def:	
range:	all
flags:	archive
vm:		cgame
doc:	

[cg_enemyModel]
def:	smarine/pm
range:	all
flags:	archive
vm:		cgame
doc:	

[cg_enemySoundModel]
def:	
range:	all
flags:	archive
vm:		cgame
doc:	

[cg_redTeamModel]
def:	smarine/pm
range:	all
flags:	archive
vm:		cgame
doc:	

[cg_redTeamSoundModel]
def:	
range:	all
flags:	archive
vm:		cgame
doc:	

[cg_blueTeamModel]
def:	smarine/pm
range:	all
flags:	archive
vm:		cgame
doc:	

[cg_blueTeamSoundModel]
def:	
range:	all
flags:	archive
vm:		cgame
doc:	

#
# Weapons
#

[cg_weaponConfig]
def:	
range:	all
flags:	archive
vm:		cgame
doc:	Weapon config for all weapons.

[cg_weaponConfig_g]
def:	
range:	all
flags:	archive
vm:		cgame
doc:	Weapon config for grenade launcher.

[cg_weaponConfig_mg]
def:	
range:	all
flags:	archive
vm:		cgame
doc:	Weapon config for machinegun.

[cg_weaponConfig_sg]
def:	
range:	all
flags:	archive
vm:		cgame
doc:	Weapon config for shotgun.

[cg_weaponConfig_gl]
def:	
range:	all
flags:	archive
vm:		cgame
doc:	Weapon config for grenade launcher.

[cg_weaponConfig_rl]
def:	
range:	all
flags:	archive
vm:		cgame
doc:	Weapon config for rocket launcher.

[cg_weaponConfig_lg]
def:	
range:	all
flags:	archive
vm:		cgame
doc:	Weapon config for lightning gun.

[cg_weaponConfig_rg]
def:	
range:	all
flags:	archive
vm:		cgame
doc:	Weapon config for railgun.

[cg_weaponConfig_pg]
def:	
range:	all
flags:	archive
vm:		cgame
doc:	Weapon config for plasmagun.

[cg_weaponConfig_bfg]
def:	
range:	all
flags:	archive
vm:		cgame
doc:	Weapon config for BFG.

[cg_weaponConfig_gh]
def:	
range:	all
flags:	archive
vm:		cgame
doc:	Weapon config for grappling hook.


[cg_forceWeaponColor]
def:	0
range:	int 0 63
flags:	archive
vm:		cgame
doc:	Bitmask for weapon color.

[cg_teamWeaponColor]
def:	7
range:	color
flags:	archive
vm:		cgame
doc:	

[cg_enemyWeaponColor]
def:	7
range:	color
flags:	archive
vm:		cgame
doc:	

[cg_flatGrenades]
def:	0
range:	bool
flags:	archive
vm:		cgame
doc:	

[cg_rocketTrail]
def:	1
range:	int 0 3
flags:	archive
vm:		cgame
doc:	

[cg_rocketTrailTime]
def:	500
range:	int 0 inf
flags:	archive
vm:		cgame
doc:	

[cg_rocketTrailRadius]
def:	5
range:	int 0 inf
flags:	archive
vm:		cgame
doc:	

[cg_grenadeTrail]
def:	1
range:	int 0 3
flags:	archive
vm:		cgame
doc:	

[cg_grenadeTrailTime]
def:	500
range:	int 0 inf
flags:	archive
vm:		cgame
doc:	

[cg_grenadeTrailRadius]
def:	5
range:	int 0 inf
flags:	archive
vm:		cgame
doc:	

[cg_railTrail]
def:	1
range:	int 0 2
flags:	archive
vm:		cgame
doc:	

[cg_railTrailTime]
def:	500
range:	int 0 inf
flags:	archive
vm:		cgame
doc:	

[cg_railTrailRadius]
def:	5
range:	int 0 inf
flags:	archive
vm:		cgame
doc:	

[cg_lightningStyle]
def:	1
range:	int 0 3
flags:	archive
vm:		cgame
doc:	

[cg_lightningExplosion]
def:	1
range:	bool
flags:	archive
vm:		cgame
doc:	

[cg_weaponBobbing]
def:	1
range:	int 0 2
flags:	archive
vm:		cgame
doc:	

[cg_switchOnEmpty]
def:	1
range:	bool
flags:	archive
vm:		cgame
doc:	

[cg_switchToEmpty]
def:	1
range:	bool
flags:	archive
vm:		cgame
doc:	

#
#
#

[cg_ambient]
def:	0
range:	bool
flags:	archive
vm:		cgame
doc:	Whether ambient sounds are enabled.

[cg_killbeep]
def:	1
range:	bool
flags:	archive
vm:		cgame
doc:	Whether to play a sound when you fragged a player.

[cg_drawSpawnpoints]
def:	1
range:	bool
flags:	archive
vm:		cgame
doc:	

[cg_drawSpeedometer]
def:	0
range:	bool
flags:	archive
vm:		cgame
doc:	

[cg_drawBBox]
def:	0
range:	bool
flags:	cheat
vm:		cgame
doc:	

[cg_itemFX]
def:	7
range:	int 0 7
flags:	archive
vm:		cgame
doc:	Bitmask to control item animations. Only works with cg_simpleItems 0.
		1: The item is bobbing
		2: The item is rotating
		4: The item is scaling up when respawning

[cg_wallhack]
def:	0
range:	bool
flags:	cheat
vm:		cgame

[cg_hitBeep]
def:	2
range:	int 0 3
flags:	archive
vm:		cgame

